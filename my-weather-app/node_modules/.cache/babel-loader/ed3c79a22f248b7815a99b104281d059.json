{"ast":null,"code":"var _jsxFileName = \"/Users/hong/Documents/3\\u1112\\u1161\\u11A8\\u1102\\u1167\\u11AB/\\u1109\\u1175\\u11AF\\u110C\\u1165\\u11AB \\u110F\\u1169\\u1103\\u1175\\u11BC/my-weather-app/src/pages/Cities.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport CityList from \"../components/CityList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Cities() {\n  _s();\n\n  const API_URL = \"http://riotkr.mockable.io/weather-crawlers/cities\";\n  const [cityState, setCityState] = useState([]); // hooks\n\n  useEffect(() => {\n    console.log(\"cities component mounted!\");\n    getCities();\n  }, []); // once\n\n  async function getCities() {\n    const cities = await fetch(API_URL).then(res => res.json());\n    console.log(cities);\n    setCityState(cities);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: API_URL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CityList, {\n      cities: cityState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cities, \"QfWCix8af5ULE+gmqlfO892q1M8=\");\n\n_c = Cities;\nexport default Cities;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cities\");","map":{"version":3,"sources":["/Users/hong/Documents/3학년/실전 코딩/my-weather-app/src/pages/Cities.jsx"],"names":["useEffect","useState","CityList","Cities","API_URL","cityState","setCityState","console","log","getCities","cities","fetch","then","res","json"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAMC,OAAO,GAAG,mDAAhB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C,CAFgB,CAIhB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAC,IAAAA,SAAS;AACV,GAHQ,EAGN,EAHM,CAAT,CALgB,CAQR;;AAER,iBAAeA,SAAf,GAA2B;AACzB,UAAMC,MAAM,GAAG,MAAMC,KAAK,CAACP,OAAD,CAAL,CAAeQ,IAAf,CAAqBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAA7B,CAArB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AAEAJ,IAAAA,YAAY,CAACI,MAAD,CAAZ;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIN;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAxBQF,M;;KAAAA,M;AA0BT,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport CityList from \"../components/CityList\";\n\nfunction Cities() {\n  const API_URL = \"http://riotkr.mockable.io/weather-crawlers/cities\";\n  const [cityState, setCityState] = useState([]);\n\n  // hooks\n  useEffect(() => {\n    console.log(\"cities component mounted!\");\n    getCities();\n  }, []); // once\n\n  async function getCities() {\n    const cities = await fetch(API_URL).then((res) => res.json());\n    console.log(cities);\n\n    setCityState(cities);\n  }\n\n  return (\n    <div>\n      <h1>Cities</h1>\n      <p>{API_URL}</p>\n      <CityList cities={cityState} />\n    </div>\n  );\n}\n\nexport default Cities;\n"]},"metadata":{},"sourceType":"module"}